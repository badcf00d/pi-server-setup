# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    application/manifest+json  max;
    ~image/                    max;
    ~font/                     max;
}

upstream gwsocket {
    server 127.0.0.1:7890;
}

server {
    root /var/www/pfrost.me/html;
    index home.html;

    server_name pfrost.me www.pfrost.me;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
       deny all;
    }

    location ~ \.html$ {
        try_files $uri $uri/ =404;
        limit_req zone=lr_zone burst=5 nodelay;

        http2_push /css/styles.css;
        http2_push /hamburgers/dist/hamburgers.css;
        http2_push /Fira-Lightened/fira.css;
        http2_push /Roboto-Mono/roboto.css;
    }

    location /directorydoesnotexist {
        dav_methods PUT DELETE MKCOL COPY MOVE;
        dav_ext_methods PROPFIND OPTIONS;
        dav_access user:rw group:rw all:rw;
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        autoindex on;
        create_full_put_path on;
    }

    location /ws {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://gwsocket;
        proxy_buffering off;
        proxy_read_timeout 7d;
    }


    # mozilla suggestions
    add_header X-Frame-Options sameorigin;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;
    add_header Content-Security-Policy "frame-ancestors 'self'";

    # HSTS (ngx_http_headers_module is required) (63072000 seconds = 24 months)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_session_tickets off;
    ssl_ecdh_curve prime256v1;

    expires $expires;


    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/pfrost.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pfrost.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



}

server {
    listen 443 ssl http2;
    server_name git.pfrost.me;

    proxy_read_timeout 720s;
    proxy_connect_timeout 720s;
    proxy_send_timeout 720s;

    client_max_body_size 50m;

    # Proxy headers
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;

    # SSL parameters
    ssl_certificate /etc/letsencrypt/live/pfrost.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pfrost.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location /_/static {
        alias /home/frost/gitea/public;
    }

    location / {
       proxy_redirect off;
       proxy_pass http://127.0.0.1:3000;
    }
}


server {
    if ($host = www.pfrost.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = git.pfrost.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = pfrost.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



    server_name pfrost.me www.pfrost.me git.pfrost.me;
    listen 80;
    return 404; # managed by Certbot

}
